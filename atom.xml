<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://cyberdragoncore.github.io</id>
    <title>CyberDragonCore的博客</title>
    <updated>2021-05-04T05:35:32.338Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://cyberdragoncore.github.io"/>
    <link rel="self" href="https://cyberdragoncore.github.io/atom.xml"/>
    <subtitle>我的学习分享</subtitle>
    <logo>https://cyberdragoncore.github.io/images/avatar.png</logo>
    <icon>https://cyberdragoncore.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, CyberDragonCore的博客</rights>
    <entry>
        <title type="html"><![CDATA[文石 Nova 3 Color 使用体验]]></title>
        <id>https://cyberdragoncore.github.io/post/wen-shi-nova-3-color-shi-yong-ti-yan/</id>
        <link href="https://cyberdragoncore.github.io/post/wen-shi-nova-3-color-shi-yong-ti-yan/">
        </link>
        <updated>2021-05-03T03:01:01.000Z</updated>
        <summary type="html"><![CDATA[<p>最近购买了文石 Nova 3 Color ，2780元的售价感觉还是太高了。不过使用体验非常不错，这里分享一些自己使用的经验。当然我不建议普通人购买，除非你非常喜欢阅读。</p>
]]></summary>
        <content type="html"><![CDATA[<p>最近购买了文石 Nova 3 Color ，2780元的售价感觉还是太高了。不过使用体验非常不错，这里分享一些自己使用的经验。当然我不建议普通人购买，除非你非常喜欢阅读。</p>
<!-- more -->
<p>之前发了几个关于 Nova 3 Color 的视频，给大家展示了 Nova 3 Color 的刷新速度和残影的问题。</p>
<iframe src="//player.bilibili.com/player.html?aid=972266007&bvid=BV1Lp4y1a7EP&cid=317632291&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
<iframe src="//player.bilibili.com/player.html?aid=247319420&bvid=BV1Hv41187i8&cid=317635394&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
<p>视频中可以明显看到电子阅读器的刷新速度是非常慢的，而且还有严重的残影。看视频、打游戏的话体验会非常糟糕。即便是看漫画也会因为残影而影响到体验。浏览网页的时候，滑动的残影和刷新速度让人感觉非常不适。</p>
<figure data-type="image" tabindex="1"><img src="https://cyberdragoncore.github.io/post-images/1620105043400.webp" alt="使用中底部出现的残影" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://cyberdragoncore.github.io/post-images/1620105055947.webp" alt="使用中顶部出现的残影" loading="lazy"></figure>
<p>不过这款电子阅读器还是满足了自己的大多数需求的。毕竟我主要还是用它来看电子书。有了这款电子阅读器之后自己替换掉了使用近三年的 Kindle 。</p>
<p>拿到手上的时候感觉比自己以前一直在用的 Kindle 558 入门款重了不少，单手握持的时候体验有一些不好。当然这个的屏幕是比自己之前的 Kindle 电子阅读器更大，而且设计上也更美观。自己换掉 Kindle 第8代入门款的原因之一就是 Kindle 比较封闭而且性能也不够强。自己平时喜欢看一些博客或者网络上的漫画，而 Kindle 自带的浏览器只能浏览一些简单的网页，很多网页的浏览体验都不好。这款文石的 Nova 3 Color 使用的是开放的 Android 10 ，非常符合自己的需要。而且 Nova 3 Color 的性能也非常强，日常使用完全足够了。自己之前也在纠结要不要买海信推出的 A7 CC 。但是考虑到 A7 CC 的屏幕不够大，还是觉得买大屏幕的 Nova 3 Color 阅读体验应该会更好一些。</p>
<figure data-type="image" tabindex="3"><img src="https://cyberdragoncore.github.io/post-images/1620105068125.webp" alt="Nova 3 Color 自带的浏览器" loading="lazy"></figure>
<p>阅读器自带的应用都有针对墨水屏的优化，使用体验很不错。自带的这个浏览器应该是基于 Chromium 的吧，设计上也可以。有针对一些网络文章提供阅读模式，应该是考虑了大家读网络小说的需求。阅读器自带了一个图书商城，不过我从应用商店里面下载了 Kindle 阅读所以没有使用过这个商城。自己平时就主要是使用 Kindle 阅读看书，此外就是使用 Flym RSS 阅读器订阅网上的新闻。个人感觉墨水屏的刷新速度和残影真的比较影响阅读体验，如果是看漫画或者看某些网页的话的确会不适宜。</p>
<p>个人使用 Nova 3 Color 的感受还是很不错的，但是这款产品终究是小众产品不推荐大家盲目购买。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[读书分享——刻意练习]]></title>
        <id>https://cyberdragoncore.github.io/post/du-shu-fen-xiang-ke-yi-lian-xi/</id>
        <link href="https://cyberdragoncore.github.io/post/du-shu-fen-xiang-ke-yi-lian-xi/">
        </link>
        <updated>2021-01-17T13:28:31.000Z</updated>
        <summary type="html"><![CDATA[<p>之前我读了一本非常优秀的书——《刻意练习》。读完后的感想便是自己为什么没有早一点看到这本书。书中的内容如此重要，如果自己能早一点知道就好了。</p>
]]></summary>
        <content type="html"><![CDATA[<p>之前我读了一本非常优秀的书——《刻意练习》。读完后的感想便是自己为什么没有早一点看到这本书。书中的内容如此重要，如果自己能早一点知道就好了。</p>
<!-- more -->
<p>《刻意练习：如何从新手到大师》这本书中告诉了大家几个常见的错误观点，还告诉了大家如何通过练习让自己成为大师级人物。<img src="https://cyberdragoncore.github.io/post-images/1610891279528.jpeg" alt="" loading="lazy"></p>
<h2 id="天才来自刻意练习">天才来自刻意练习</h2>
<p>大家应该都听说过天才来自努力，但是大家真的是这样认为的吗？估计很多人仍然认为天才是天生的，并且是常人无法超越的。因为仔细想想真的有很多人的成就就像是无法达到一样。很多人估计想过去练习跑步、练习弹吉他，但是自己的水平就是不能提高。很显然自己永远也达不到那些天才的水平，某些专业才华是天生的。</p>
<h2 id="练习需要的基本条件">练习需要的基本条件</h2>
<h2 id="如何练习">如何练习</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker 笔记]]></title>
        <id>https://cyberdragoncore.github.io/post/docker-bi-ji/</id>
        <link href="https://cyberdragoncore.github.io/post/docker-bi-ji/">
        </link>
        <updated>2021-01-11T15:21:09.000Z</updated>
        <summary type="html"><![CDATA[<p>我在使用 Linux 的过程中发现很多软件都被人们用 Docker 打包好了，据说这样可以省去很多配置软件和软件依赖的时间。不过因为我不会用 Docker 所以一直没尝试过。直到前段时间才学习了一下怎么使用 Docker ，这里是我学习记录的笔记。</p>
]]></summary>
        <content type="html"><![CDATA[<p>我在使用 Linux 的过程中发现很多软件都被人们用 Docker 打包好了，据说这样可以省去很多配置软件和软件依赖的时间。不过因为我不会用 Docker 所以一直没尝试过。直到前段时间才学习了一下怎么使用 Docker ，这里是我学习记录的笔记。</p>
<!-- more -->
<p>Docker 是一种为了解决 Linux 上的软件依赖而发明的技术。我在很久之前就听说了，也遇到了很多使用 Docker 部署的软件。不过最近才学习怎么使用。不同的 Linux 发行版安装 Docker 的方法有一些不同，建议大家参考官方手册之后自己安装。</p>
<p>安装好了之后可以开始执行</p>
<pre><code class="language-sh">$docker run hello-world
</code></pre>
<p>这时软件会检查本地有没有镜像文件，如果没有就从镜像文件的仓库里面下载下来。下载之后再根据这个镜像文件生成容器文件并运行容器。这时输入</p>
<pre><code class="language-sh">$docker container ls
</code></pre>
<p>可以查看正在运行的容器。注意列出的容器的 ID ，因为很多操作都需要使用容器的 ID 。比如终止容器运行就使用</p>
<pre><code class="language-sh">$docker container kill [容器的 ID]
</code></pre>
<p>终止容器运行之后如果要重新启动这个容器则使用</p>
<pre><code class="language-sh">$docker container start [容器的 ID]
</code></pre>
<p>如果要完全删除容器的文件则使用</p>
<pre><code class="language-sh">$docker container rm [容器的 ID]
</code></pre>
<p>当然终止容器还可以用这个命令</p>
<pre><code class="language-sh">$docker container stop [容器的 ID]
</code></pre>
<p>介绍几个基本概念。在 Docker 中的镜像、容器都是文件。镜像就像是一个模板，容器则是根据模板生成的实际使用的文件。镜像中包含软件运行所需要的各种文件，容器不仅包含这些运行依赖的文件还有各种运行产生的数据。Docker 还有各种命令可以帮助你创建自己的镜像，并且有一个网站存储各种公开的镜像。存储镜像的网站就是 Docker 的镜像仓库，如果你创建了一个镜像也可以发布到这个仓库中。 Docker 的镜像大多数都可以在 Docker 的镜像仓库中找到。如果你想使用一个镜像，下载镜像的命令是</p>
<pre><code class="language-sh">$docker pull [用户名]/[镜像名]:[版本]
</code></pre>
<p>不过， Docker 默认使用官方镜像仓库。在国内这个仓库的访问速度感人。推荐大家使用各种镜像网站访问。比如像这样使用百度的镜像网站</p>
<pre><code class="language-sh">$docker pull mirror.baidubce.com/[用户名]/[镜像名]:[版本]
</code></pre>
<p>想要根据下载的镜像生成容器，可以使用</p>
<pre><code class="language-sh">$docker container run [镜像的名字]
</code></pre>
<p>如果想看容器里面的输出信息，可以使用</p>
<pre><code class="language-sh">$docker container logs [容器的 ID]
</code></pre>
<p>查看所有的容器，使用的命令是</p>
<pre><code class="language-sh">$docker container ls --all
</code></pre>
<p>这样就会列出所有的容器 ID ，包括了已经停止运行的容器的 ID。</p>
<p>Docker 的命令中还有一些常用的参数，这里举一些例子。</p>
<pre><code class="language-sh"># -it 这个参数会让你的终端的内容传给容器中执行
$docker container run -it [镜像] 
# -p 这个参数会将容器中的端口映射到本地计算机
$docker container run -p 本地端口:容器端口 [镜像]
# --rm 这个参数使容器停止之后被自动删除
$docker container run --rm [镜像]
# 在容器后面加上一条命令，这条加上的命令会在容器启动后自动执行
$docker container run [镜像] 命令
</code></pre>
<p>这些都是基本的一些命令，不过对于普通使用来说已经完全足够了。只要搞清楚了 Docker 的基本设计逻辑，想要上手使用还是很容易的。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[自己使用的几个 RSS 订阅源]]></title>
        <id>https://cyberdragoncore.github.io/post/zi-ji-shi-yong-de-ji-ge-rss-ding-yue-yuan/</id>
        <link href="https://cyberdragoncore.github.io/post/zi-ji-shi-yong-de-ji-ge-rss-ding-yue-yuan/">
        </link>
        <updated>2020-12-23T12:45:55.000Z</updated>
        <summary type="html"><![CDATA[<p>之前我说了一下自己喜欢用 RSS 的<a href="https://cyberdragoncore.github.io/post/zhe-ge-shi-dai-huan-you-ren-yong-rss-ma/">原因</a>。</p>
<p>今天把自己常用的几个 RSS 订阅源分享一下。<br>
我平时都喜欢一些科技方面的资讯，所以订阅了很多很这方面的内容。这里把我觉得不错的内容分享一下。</p>
]]></summary>
        <content type="html"><![CDATA[<p>之前我说了一下自己喜欢用 RSS 的<a href="https://cyberdragoncore.github.io/post/zhe-ge-shi-dai-huan-you-ren-yong-rss-ma/">原因</a>。</p>
<p>今天把自己常用的几个 RSS 订阅源分享一下。<br>
我平时都喜欢一些科技方面的资讯，所以订阅了很多很这方面的内容。这里把我觉得不错的内容分享一下。</p>
<!-- more -->
<p><strong>少数派</strong>  优秀的极客资讯网站。订阅地址 https://sspai.com/feed</p>
<p><strong>Wired</strong>  著名资讯网站。好像每个月只可以免费看5篇文章。订阅地址 https://www.wired.com/about/rss_feeds/</p>
<p><strong>NASA</strong>  每天看一些天文渲染图，假装自己是个天文爱好者。订阅地址 https://www.nasa.gov/content/nasa-rss-feeds</p>
<p><strong>环球科学</strong>  看一些科普文章装作自己很爱学习。订阅地址 https://feedx.net/rss/huanqiukexue.xml</p>
<p><strong>Solidot</strong>  著名的互联网资讯网站。内容很简短但是很及时。订阅地址 http://solidot.org/index.rss</p>
<p><strong>知乎每日精选</strong>  偶尔看看知乎上的一些科普文章。订阅地址 https://www.zhihu.com/rss</p>
<p><strong>[ i D 公 社 ]</strong>  一个设计网站。内容非常有用，文章通俗易懂。订阅地址 http://feeds.feedburner.com/ID</p>
<p><strong>书伴</strong>  分享书籍和 Kindle 使用体验的网站。订阅地址 https://feeds.feedburner.com/bookfere</p>
<p>如果还有什么网站比较喜欢但是网站不支持 RSS 订阅的话，可以看看这几个提供订阅服务的网站。在这上面找找看有没有你想要的 RSS 订阅源。</p>
<p><strong>RSSHub</strong></p>
<p>提供很多网站的订阅地址，包括 bilibili 、知乎等网站。感觉这个网站超赞。网站地址 https://docs.rsshub.app/</p>
<p><strong>微文库</strong></p>
<p>提供微信公众号的订阅。网站地址 https://www.wxwenku.com/</p>
<p><strong>FeedX</strong></p>
<p>提供很多新闻网站的 RSS 订阅。网站地址 https://feedx.net/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[这个时代还有人用 RSS 吗？]]></title>
        <id>https://cyberdragoncore.github.io/post/zhe-ge-shi-dai-huan-you-ren-yong-rss-ma/</id>
        <link href="https://cyberdragoncore.github.io/post/zhe-ge-shi-dai-huan-you-ren-yong-rss-ma/">
        </link>
        <updated>2020-12-06T13:04:50.000Z</updated>
        <summary type="html"><![CDATA[<p>随着互联网的发展现在越来越多的人获取信息的渠道是各种奇怪的App。比如说抖音、微信、知乎、哔哩哔哩之类的手机软件成了多数人获取新闻的途径。但是曾经有一个时期，人们获取信息的主要工具是各个网站和聚合网站信息的 RSS 阅读器。</p>
]]></summary>
        <content type="html"><![CDATA[<p>随着互联网的发展现在越来越多的人获取信息的渠道是各种奇怪的App。比如说抖音、微信、知乎、哔哩哔哩之类的手机软件成了多数人获取新闻的途径。但是曾经有一个时期，人们获取信息的主要工具是各个网站和聚合网站信息的 RSS 阅读器。</p>
<!-- more -->
<h3 id="rss-和互联网的变化">RSS 和互联网的变化</h3>
<p>在以前的时候，手机还未普及。人们经常上网到各个网站上获取信息，看一些博主写的博客。但是你不能及时知道这个网站有没有更新内容，一个一个网站去查看也很麻烦。为了解决这个问题有人发明了 RSS ，使用 RSS 工具自动从网站上获取网站的更新情况。 RSS 让人们可以很方便地获取信息。在那个年代 RSS 发展了很长一段时间，直到移动互联网时代的到来。<br>
移动互联网时代的人们出现了一些奇怪的变化。在移动互联网时代，几乎每个人都有手机；几乎每个人每分钟都在用手机；几乎每个人每分钟都在从手机上获取信息；还有最重要的是，几乎每个人都在用手机分享信息。这导致了互联网的几个变化，互联网公司为了能得到更高的流量而开发手机应用，再利用手机应用将自己的信息推送到用户手中；用户从过去的主动获取信息变成了被动地接受信息；用户每分钟几乎都在上传各种内容；内容的创作变得越来越简单；越来越多的用户上传自己创作的内容；而网站吸引用户的内容也越来越多的依靠这些用户创作的内容；网站的内容越来越多，多到没有人能看完这些内容。在这种情况下网站为了吸引用户设计了按用户喜好推送内容的信息流，用户为了过滤掉自己不喜欢的内容也选择接受了这样的信息流。就此 RSS 这种工具慢慢地淡出了人们的视野。<br>
但是这好吗？这不好。<br>
根据算法进行推送的信息流产品越来越多，但是人们却越来越沉迷于网络。你是不是一有空闲就掏出手机刷一刷知乎？你是不是一直在看 YouTube 推送的视频而且感觉停不下来？在算法的推动下，人们沉迷于信息流带来的满足中。人们非常担心自己的时间被消耗在刷手机上。而另一个值得担心的事情是，算法被操控。一些恐怖的计划在每个人都看得见的地方进行着。<br>
在这种情况下，我觉得 RSS 的优点又被凸显出来了。 RSS 不被个性化的算法操纵，不会推送广告，简单且透明。正是因为这样，我才开始使用 RSS 作为自己获取信息的主要途径之一。当然， RSS 的缺点也很明显。对于一些内容更新快的网站来说，几分钟就会更新几十条信息，这当然不适合用 RSS 订阅。不过，其实也没有多少人一直关心这种网站。所以，我觉得 RSS 作为一个逃离推送算法、找回信息自主权的一个工具是非常不错的。不知道大家的看法如何，欢迎留言。</p>
<h3 id="最后推荐几个-rss-阅读器">最后推荐几个 RSS 阅读器</h3>
<p>这里再介绍一下自己喜欢的几个 RSS 阅读器。</p>
<h4 id="feeder">Feeder</h4>
<p>网站： https://gitlab.com/spacecowboy/Feeder<br>
下载网址： https://f-droid.org/zh_Hans/packages/com.nononsenseapps.feeder/<br>
这个是安卓手机上面的一个非常简洁美观的 RSS 阅读器，个人非常喜欢。</p>
<h4 id="ttrss-reader">TTRSS-Reader</h4>
<p>网站： https://github.com/nilsbraden/ttrss-reader-fork/wiki<br>
下载网址： https://f-droid.org/zh_Hans/packages/org.ttrssreader/<br>
这个阅读器也非常好用。功能也够用。</p>
<h4 id="feedpop-rss-阅读器">FeedPop - RSS 阅读器</h4>
<p>网站： https://github.com/xs9627/feedpop/blob<br>
这是一个 Chrome 浏览器的扩展，界面很简洁。感觉用起来很方便。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[我的电脑设置（一）]]></title>
        <id>https://cyberdragoncore.github.io/post/wo-de-dian-nao-she-zhi/</id>
        <link href="https://cyberdragoncore.github.io/post/wo-de-dian-nao-she-zhi/">
        </link>
        <updated>2020-11-26T01:21:43.000Z</updated>
        <summary type="html"><![CDATA[<p>最近又重新给电脑安装了 Ubuntu 系统。之前用了 Manjaro 、 Arch ，发现 Ubuntu 虽然不够简洁但是省是啊！用 Ubuntu 的时候不用那么麻烦的设置太多东西，软件的兼容性也比较好。可以做到安装即可使用，尽快的投入工作中。不过还是有一些系统需要设置一下，我这里把一些基本的设置都记录下来以便以后使用。</p>
]]></summary>
        <content type="html"><![CDATA[<p>最近又重新给电脑安装了 Ubuntu 系统。之前用了 Manjaro 、 Arch ，发现 Ubuntu 虽然不够简洁但是省是啊！用 Ubuntu 的时候不用那么麻烦的设置太多东西，软件的兼容性也比较好。可以做到安装即可使用，尽快的投入工作中。不过还是有一些系统需要设置一下，我这里把一些基本的设置都记录下来以便以后使用。</p>
<!-- more -->
<p>首先记录以下自己的电脑上的必装软件</p>
<ul>
<li>Vim 好用的文本编辑器，在命令行下面很方便。</li>
<li>zsh 现代一点的shell。用 Oh-my-zsh 和 Power level 10k 设置好了之后又酷又实用。</li>
<li>ssh 远程登陆必用的工具。</li>
<li>Google-Chrome 这可能是最好的浏览器。</li>
<li>Brave-Browser 在 Chrome 的基础上设计的保护隐私的浏览器。</li>
<li>Firefox 感觉现在的 Firefox 没什么特别的地方了，可能就是隐私保护不错吧。不够还是偶尔试试看一些网页的兼容性。</li>
<li>Microsoft-Edge 国内用的话可以比较方便的和手机同步数据。不过微软才推出 Dev 版，现在的 Dev 版还不能登陆帐号。可能要等正式版发布才能真正用上了。</li>
<li>Visual-Studio-Code 现在流行的文本编辑器之一，自带一堆程序员喜欢的工具。用起来很赞。~补充一下，因为 Visual-Studio-Code 中有微软设置的跟踪程序我已经换成了 VSCodium 。~</li>
<li>Geary 比较好看的邮件软件。管理邮件的时候看起来比较舒心。</li>
<li>Dolphin 这是 KDE 桌面的一个文件管理器， Ubuntu 默认的是 Gnome 桌面。感觉 Gnome 桌面的文件管理器功能不如这个强。</li>
<li>Konosle 这是 KDE 桌面自带的终端模拟器。结合 Dolphin 用的话，可以一边使用 Dolphin 查看文件一边使用 Konosle 输入命令。而且 Konosle 的颜值也很高，可自定义的功能也很多。</li>
<li>Pomodoro 番茄时间工具。管理你的工作与休息的时间，每隔25分钟休息一下。据说可以提高效率。</li>
<li>LibreOffice 开源的办公软件。其实我用得很少，但是偶尔学校要做一些文件。</li>
<li>Gridea 静态网站模板系统。我现在用的 GitHub Page 就是用这个工具做的。之前我也试过了 Hexo ，不过 Hexo 老是遇到各种不兼容、包管理的问题。折腾了半天发现还是 Gridea 这种工具省心。少花时间折腾就可以多一点时间学习。</li>
<li>VNote 笔记软件。很酷、很好用的一个 MarkDown 笔记软件。</li>
<li>Git 最好的版本管理工具应该没有争议。</li>
<li>Git-cola 图形化的 Git ，虽然自己也很喜欢用命令行。但是图形界面看起来很酷。</li>
<li>conky(conky-all conky-manger) 这个是美化桌面的一系列工具。</li>
<li>Gnome-tweak 美化桌面的工具。以后慢慢介绍。</li>
<li>Ardiuno 开发嵌入式的工具。</li>
<li>Calibre 电子书的管理工具。用来管理 Kindle 上的电子书很方便。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://cyberdragoncore.github.io/post/hello-gridea/</id>
        <link href="https://cyberdragoncore.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>